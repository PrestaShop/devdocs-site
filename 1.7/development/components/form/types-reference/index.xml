<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Types Reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/</link>
    <description>Recent content in Types Reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CategoryChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/category-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/category-choice-tree/</guid>
      <description>CategoryChoiceTreeTypeCategoryChoiceTreeType is a child of MaterialChoiceTreeType, it extends parent options with options listed bellow. It is used to display category tree selection box and requires Javascript components.&#xA;Type options Option Type Default value Description choices_tree array Array of all available categories Values to choose from in choices tree choice_label string name An array key which should be targeted in provided choices list to get the label for input choice_value string id_category An array key which should be targeted in provided choices list to get the value for input Required Javascript components Component Description .</description>
    </item>
    <item>
      <title>ChangePasswordType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/change-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/change-password/</guid>
      <description>ChangePasswordTypeChangePasswordType is used to create form for changing password and has a built-in new password generator which requires Javascript components.&#xA;Required Javascript components Component Description ../admin-dev/themes/new-theme/js/components/form/change-password-control.js Generates random passwords, validates new password and it&amp;rsquo;s confirmation, displays error messages related to validation Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\ChangePasswordType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;change_password&amp;#39;, ChangePasswordType::class) ; } } Then in Javascript you have to enable ChangePasswordControl component.</description>
    </item>
    <item>
      <title>CountryChoiceType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/country-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/country-choice/</guid>
      <description> CountryChoiceTypeCountryChoiceType is a child of ChoiceType. It is used to display countries selection box and by default comes with a list of countries from PrestaShop database.&#xA;Type options Option Type Default value Description choices array Array of all available countries Choice list that is passed to parent &amp;lsquo;choices&amp;rsquo;. Array should be formatted in name =&amp;gt; value pairs. Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\CountryChoiceType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;country&amp;#39;, CountryChoiceType::class); } } Preview example CountryChoiceType rendered in form example </description>
    </item>
    <item>
      <title>DatePickerType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/date-picker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/date-picker/</guid>
      <description> DatePickerTypeDatePickerType creates a field with a date picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.&#xA;Custom optionsNone.&#xA;Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\DatePickerType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;date_from&amp;#39;, DatePickerType::class) -&amp;gt;add(&amp;#39;date_to&amp;#39;, DatePickerType::class); } } Preview example DatePickerType rendered in form example </description>
    </item>
    <item>
      <title>DateRangeType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/date-range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/date-range/</guid>
      <description> DateRangeTypeDateRangeType combines two DatePickers to create date range picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.&#xA;Custom optionsNone.&#xA;Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\DateRangeType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { // this will render a date range picker with 2 DatePickerTypes // named &amp;#39;date_add_from&amp;#39; and &amp;#39;date_add_to&amp;#39; $builder-&amp;gt;add(&amp;#39;date_add&amp;#39;, DateRangeType::class); } } Preview example DateRangeType rendered in form example </description>
    </item>
    <item>
      <title>FormattedTextareaType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/formatted-textarea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/formatted-textarea/</guid>
      <description>FormattedTextareaTypeEnables TinyMCE text editor on TextareaType.&#xA;Type options Option Type Default value Description autoload bool true Whether to automatically load TinyMCE editor, or no. limit int 21844 Limit of characters in text field. By default value equals to max size of UTF-8 content available in MySQL text column Required Javascript componentsIn order to use TinyMCE editor in the PrestaShop UI Kit, you need to initialize its javascript component once the page is loaded:</description>
    </item>
    <item>
      <title>GeneratableTextType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/generatable-text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/generatable-text/</guid>
      <description>GeneratableTextTypeExtends TextType with additional button which allows to generate random value for input.&#xA;Type options Option Type Default value Description generated_value_length int 32 The length of value to be generated Required Javascript components Component Description ../admin-dev/themes/new-theme/js/components/generatable-input.js Generates a random value for input. Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\GeneratableTextType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;key&amp;#39;, GeneratableTextType::class, [ &amp;#39;generated_value_length&amp;#39; =&amp;gt; 16, ]) ; } } Then in Javascript you have to enable GeneratableInput component.</description>
    </item>
    <item>
      <title>IntegerMinMaxFilterType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/integer-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/integer-min-max-filter/</guid>
      <description>IntegerMinMaxFilterTypeThe IntegerMinMaxFilterType represents two IntegerType fields - one holds minimum value of integer type and other holds maximum value. IntegerType is one of the native symfony types.&#xA;Type options Option Type Default Description min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;), &amp;lsquo;min&amp;rsquo; =&amp;gt; 0, &amp;lsquo;step&amp;rsquo; =&amp;gt; 1, ), ) Accepts all possible values that IntegerType has* max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.</description>
    </item>
    <item>
      <title>IpAddressType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/ip-address/</guid>
      <description>IpAddressTypeExtends TextType with additional button which inserts current device ip address to input.&#xA;Type optionsNone.&#xA;Required Javascript components Component Description ../admin-dev/themes/new-theme/js/maintenance-page/ip-input.js Inserts current device ip address to input. Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\IpAddressType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add( &amp;#39;my_ip&amp;#39;, IpAddressType::class ) ; } } Then in Javascript you have to enable IpInput component.&#xA;import IpInput from &amp;#39;admin-dev/themes/new-theme/js/maintenance-page/ip-input&amp;#39;; // initialize the component IpInput.</description>
    </item>
    <item>
      <title>MaterialChoiceTableType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-choice-table/</guid>
      <description>MaterialChoiceTableTypeMaterialChoiceTableType renders checkbox choices using table layout. It requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description expanded bool true Whether the table should be expanded by default or not multiple bool true Whether to enable multiple checkboxes selection or no Required Javascript components Component Description ../admin-dev/themes/new-theme/js/components/choice-table.js Manages selection of all checkboxes Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\MaterialChoiceTableType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;group_access&amp;#39;, MaterialChoiceTableType::class) ; } } Then in Javascript you have to enable ChoiceTable component.</description>
    </item>
    <item>
      <title>MaterialChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-choice-tree/</guid>
      <description>MaterialChoiceTreeTypeMaterialChoiceTreeType renders checkbox choices using choices tree layout. Requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description choices_tree array [] The choices array to select from choice_label string &amp;rsquo;name&#39; The key in options array to target when getting label for checkbox choice_value string &amp;lsquo;id&amp;rsquo; The key in options array to target when getting value for checkbox choice_children string &amp;lsquo;children&amp;rsquo; The key in options array to target when getting the child for checkbox multiple bool true Whether to enable multiple checkboxes selection or no disabled_values array [] Array of ids to disable in choices tree Required Javascript components Component Description .</description>
    </item>
    <item>
      <title>MaterialMultipleChoiceTableType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-multiple-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/material-multiple-choice-table/</guid>
      <description>MaterialMultipleChoiceTableTypeMaterialMultipleChoiceTableType renders checkbox choices using choices table layout. It is similar to MaterialChoiceTableType, but it allows using multiple checkboxes per row. Requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description multiple_choices array none Each item of array should contain a name which represents column header and valid options for ChoiceType including the &amp;lsquo;choices&amp;rsquo; array which values are rendered as column selections choices array none The &amp;lsquo;choices&amp;rsquo; array for ChoiceType.</description>
    </item>
    <item>
      <title>MoneyWithSuffixType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/money-with-suffix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/money-with-suffix/</guid>
      <description> MoneyWithSuffixTypeThe MoneyWithSuffixType represents input with currency suffix.&#xA;Type options Option Type Default Description currency string EUR Currency ISO code suffix string Empty string Suffix text Required Javascript componentsNone.&#xA;Code exampleAdd MoneyWithSuffixType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\MoneyWithSuffixType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;price&amp;#39;, MoneyWithSuffixType::class, [ &amp;#39;currency&amp;#39; =&amp;gt; &amp;#39;EUR&amp;#39;, &amp;#39;suffix&amp;#39; =&amp;gt; &amp;#39;(tax excl.)&amp;#39;, ]) ; } } Preview example MoneyWithSuffixType rendered in form </description>
    </item>
    <item>
      <title>NumberMinMaxFilterType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/number-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/number-min-max-filter/</guid>
      <description>NumberMinMaxFilterTypeThe NumberMinMaxFilterType represents two NumberType fields - one holds minimum value of float number type and other holds maximum value. NumberType is one of the native symfony types.&#xA;Type options Option Type Default Description min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;)), ) Accepts all possible values that NumberType has max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;)), ) Accepts all possible values that NumberType has Required Javascript componentsNone.</description>
    </item>
    <item>
      <title>ShopChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/shop-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/shop-choice-tree/</guid>
      <description> ShopChoiceTreeTypeThe ShopChoiceTreeType is subtype of MaterialChoiceTreeType which is configured to be used for shop association input.&#xA;Type options Option Type Default Description multiple bool true Whether multiple shops can be selected or not. Required Javascript components Component Description admin-dev/themes/new-theme/js/components/form/choice-tree.js Manages interaction of choice tree Code exampleAdd ShopChoiceTreeType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\ShopChoiceTreeType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;shop_association&amp;#39;, ShopChoiceTreeType::class); } } Preview example ShopChoiceTreeType rendered in form </description>
    </item>
    <item>
      <title>SwitchType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/switch/</guid>
      <description> SwitchTypeThe SwitchType displays a switch with Yes/No values.&#xA;Type options Option Type Default Description choices array Choices with Yes/No values Choices for switch type disabled bool false Whether Switch should be disabled or not Required Javascript componentsNone.&#xA;Code exampleAdd SwitchType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\SwitchType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;switch&amp;#39;, SwitchType::class, [ // Customized choices with ON/OFF instead of Yes/No &amp;#39;choices&amp;#39; =&amp;gt; [ &amp;#39;ON&amp;#39; =&amp;gt; true, &amp;#39;OFF&amp;#39; =&amp;gt; false, ], ]); } } Preview example SwitchType rendered in form </description>
    </item>
    <item>
      <title>TextWithLengthCounterType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/text-with-length-counter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/text-with-length-counter/</guid>
      <description>TextWithLengthCounterTypeThe TextWithLengthCounterType represents text input with value length counter.&#xA;Type options Option Type Default Description max_length int None, must be configured Max length of input value position string before Configures position for counter. Available options are: before and after input string text Configured input type text or textarea Required Javascript components Component Description admin-dev/themes/new-theme/js/components/form/text-with-length-counter.js Calculates remaining length for input Code exampleFirst, you have to add TextWithLengthCounterType to your form.</description>
    </item>
    <item>
      <title>TextWithUnitType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/text-with-unit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/text-with-unit/</guid>
      <description> TextWithUnitTypeThe TextWithUnitType represents text input with unit value (e.g. Kg, Cm &amp;amp; etc.).&#xA;Type options Option Type Default Description unit string unit Type of unit (e.g. Kg, Cm &amp;amp; etc) Required Javascript componentsNone.&#xA;Code exampleAdd TextWithUnitType to your form and optionally you can configure unit for it.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\TextWithUnitType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;weight&amp;#39;, TextWithUnitType::class, [ &amp;#39;unit&amp;#39; =&amp;gt; &amp;#39;kg&amp;#39;, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;empty_data&amp;#39; =&amp;gt; &amp;#39;0&amp;#39;, ]) ; } } Preview example TextWithUnitType rendered in form </description>
    </item>
    <item>
      <title>TranslatableType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/translatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/translatable/</guid>
      <description>TranslatableTypeThe TranslatableType allows you to configure multilanguage input. This multilanguage behavior is provided on top of an existing input Type.&#xA;Type options Option Type Default Description type string Symfony\Component\Form\Extension\Core\Type\TextType Type that you want to be translatable options array Empty array Options for configured type locales array Enabled shop locales (languages) Locales in which field can be translated If you wish to use FormattedTextareaType as type, your base type must be TranslateType instead of TranslatableType.</description>
    </item>
    <item>
      <title>YesAndNoChoiceType</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/yes-and-no-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/components/form/types-reference/yes-and-no-choice/</guid>
      <description> YesAndNoChoiceTypeThe YesAndNoChoiceType represents select input with options Yes and No.&#xA;Type options Option Type Default Description choices array array By default Yes/No choices are defined required boolean false Whether field is required or not Required Javascript componentsNone.&#xA;Code exampleAdd YesAndNoChoiceType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\YesAndNoChoiceType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;yesandnochoicetype&amp;#39;, YesAndNoChoiceType::class, [ &amp;#39;choices&amp;#39; =&amp;gt; [ &amp;#39;Yes&amp;#39; =&amp;gt; true, &amp;#39;No&amp;#39; =&amp;gt; false, ], ]); } } Preview example YesAndNoChoiceType rendered in form </description>
    </item>
  </channel>
</rss>
