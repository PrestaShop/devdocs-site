<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Core Development Reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/1.7/development/</link>
    <description>Recent content in Core Development Reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/1.7/development/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to compile assets</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/compile-assets/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/compile-assets/</guid>
      <description>How to compile assetsSome components in PrestaShop, like Javascript or SCSS files, need to be compiled to be usable.&#xA;RequirementsPrestaShop uses Webpack to compile assets, which requires NodeJS (get it here).&#xA;You will need a different NodeJS version depending on the PrestaShop version you&amp;rsquo;re working with:&#xA;PrestaShop Versions NodeJS Versions NPM Versions 1.7.0~1.7.6 8.x 5.x 1.7.7 10.x 6.x 1.7.8 12.x and 14.x 6.x If you are struggling to compile assets, you might be using the wrong NodeJs version.</description>
    </item>
    <item>
      <title>How to send e-mails</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/mail/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/mail/</guid>
      <description>How to send e-mails Using the Mail::send() method The Mail core class extends ObjectModel This example is assuming you are using in a controller named mycontroller of a module named mymodule &amp;lt;?php class mymodulemycontrollerModuleFrontController extends ModuleFrontController { public function initContent() { parent::initContent(); Mail::Send( (int)(Configuration::get(&amp;#39;PS_LANG_DEFAULT&amp;#39;)), // defaut language id &amp;#39;contact&amp;#39;, // email template file to be use &amp;#39; Module Installation&amp;#39;, // email subject array( &amp;#39;{email}&amp;#39; =&amp;gt; Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // sender email address &amp;#39;{message}&amp;#39; =&amp;gt; &amp;#39;Hello world&amp;#39; // email content ), Configuration::get(&amp;#39;PS_SHOP_EMAIL&amp;#39;), // receiver email address NULL, //receiver name NULL, //from email address NULL //from name ); } } Prestashop will use the Shop Configuration to decide if use smtp connection or php mail function so check it out on backoffice or in app/config/parameter.</description>
    </item>
    <item>
      <title>UIKit</title>
      <link>https://devdocs.prestashop-project.org/1.7/development/uikit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/1.7/development/uikit/</guid>
      <description>What&amp;rsquo;s the PrestaShop UIKit?The UIKit is a project extending Bootstrap 4 in order to provide some components with PrestaShop&amp;rsquo;s colors. You can see every component on this page.&#xA;How do we use the UIKit?We use it by adding it into our npm dependency, and then you&amp;rsquo;ve multiple possibilities to use it.&#xA;You can import dist files, it means that you won&amp;rsquo;t be able to use our variables outside of the UIKit.</description>
    </item>
  </channel>
</rss>
