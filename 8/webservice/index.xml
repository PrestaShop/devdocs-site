<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The PrestaShop Webservice API on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/8/webservice/</link>
    <description>Recent content in The PrestaShop Webservice API on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://devdocs.prestashop-project.org/8/webservice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Getting Started</title>
      <link>https://devdocs.prestashop-project.org/8/webservice/getting-started/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop-project.org/8/webservice/getting-started/</guid>
      <description>Getting Started About CRUD &amp;amp; RESTThe PrestaShop web service uses the REST architecture in order to be available on as many platforms as possible, since the HTTP protocol and XML / JSON formats are understood by most platforms, if not all.
CRUD is an acronym that stands for &amp;ldquo;Create, Read, Update, and Delete&amp;rdquo;. These are the four basic operations for managing data in an application.
REST defines roughly a style of software architecture, which promotes the use of HTTP methods when building web application, instead of custom methods or protocols such as SOAP or WSDL.</description>
    </item>
    
    <item>
      <title>Reference</title>
      <link>https://devdocs.prestashop-project.org/8/webservice/reference/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop-project.org/8/webservice/reference/</guid>
      <description>Web service referenceAll webservice APIs are accessible through the /api/ gateway. For instance, http://example.com/api/carriers
Available HTTP methodsMost resources can be accessed in a REST manner, with the 5 main HTTP request methods: GET, POST, PUT, DELETE, HEAD. The only exceptions are:
   Key GET POST PUT PATCH DELETE HEAD     search ✅     ✅   stock_availables ✅  ✅ ✅  ✅   stock_movements ✅     ✅   stocks ✅     ✅   supply_order_details ✅     ✅   supply_order_histories ✅     ✅   supply_order_receipt_histories ✅     ✅   supply_order_states ✅     ✅   supply_orders ✅     ✅   warehouse_product_locations ✅     ✅   warehouses ✅ ✅ ✅ ✅  ✅    All resources have two schemas that are accessible via a parameter:</description>
    </item>
    
    <item>
      <title>Cheat sheet</title>
      <link>https://devdocs.prestashop-project.org/8/webservice/cheat-sheet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop-project.org/8/webservice/cheat-sheet/</guid>
      <description>Cheat sheet for WebserviceAll these options can be added to your queries as query parameters (either GET or POST depending on the method used in your request).
Generic Options   Key Value Description     output_format XML, JSON Change the output format   ps_method GET, POST, PUT, PATCH, DELETE Override the HTTP method used for the request    Resource options   Key Value Result     language 3 Only display localized fields in one language    [3|5|.</description>
    </item>
    
    <item>
      <title>Extend Webservice with custom resources</title>
      <link>https://devdocs.prestashop-project.org/8/webservice/extend-webservice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://devdocs.prestashop-project.org/8/webservice/extend-webservice/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
