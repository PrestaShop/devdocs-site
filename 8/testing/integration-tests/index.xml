<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Integration tests on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/8/testing/integration-tests/</link>
    <description>Recent content in Integration tests on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/8/testing/integration-tests/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to execute Integration Tests</title>
      <link>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-execute-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-execute-tests/</guid>
      <description> How to execute Integration TestsThere are two integration tests suites :&#xA;one using Behat one for PHPUnit tests Each suite needs a specific PHPUnit configuration. This is why each test suite has a specific Composer command:&#xA;composer integration-tests composer integration-behaviour-tests You can execute the entire PHPUnit test suites using the composer test-all command. </description>
    </item>
    <item>
      <title>How to create your own Behat tests</title>
      <link>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-create-your-own-behat-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-create-your-own-behat-tests/</guid>
      <description>How to create your own Behat tests or add tests to PrestaShopBehat tests are great if you want to validate the behavior of a component of the code and/or follow a user-oriented scenario.&#xA;By &amp;ldquo;component&amp;rdquo; we usually mean a group of classes being called together, sometimes using an external dependency (a web API or a database system like MySQL).&#xA;By &amp;ldquo;user-oriented scenario&amp;rdquo; we mean a scenario that is a series of steps, each step is an action, and at the end of the series there is an expected result</description>
    </item>
    <item>
      <title>How to create your own symfony controller tests</title>
      <link>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-create-your-own-symfony-controller-tests/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/testing/integration-tests/how-to-create-your-own-symfony-controller-tests/</guid>
      <description>How to create your own symfony controller tests or add tests to PrestaShopIf you create your own Modern (symfony) controllers or if you plan on migrating a legacy controller, you can create tests to cover parts of HTTP layer aka symfony functional tests.&#xA;Creating a functional testTo create a functional test, we encourage you to base your test class on our own implementation of WebTestCase.&#xA;For instance:&#xA;&amp;lt;?php namespace Tests\Functional\Foo; use Tests\Integration\PrestaShopBundle\Test\WebTestCase; class BarTest extends WebTestCase { public function testSomeAction() { $url = this-&amp;gt;router-&amp;gt;generate(&amp;#39;route_name&amp;#39;); $this-&amp;gt;client-&amp;gt;request(&amp;#39;GET&amp;#39;, $url); $response = $this-&amp;gt;client-&amp;gt;getResponse(); self::assertTrue($response-&amp;gt;isSuccessful()); } } Find out more in Symfony&amp;rsquo;s documentation on functional testing.</description>
    </item>
  </channel>
</rss>
