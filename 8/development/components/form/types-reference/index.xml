<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Types Reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/</link>
    <description>Recent content in Types Reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/8/development/components/form/types-reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AccordionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/accordion-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/accordion-type/</guid>
      <description> AccordionTypeThis form type is used as a container of sub forms, each sub form will be rendered as a part of an accordion.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: AccordionType Type options Option Type Default value Description </description>
    </item>
    <item>
      <title>AmountCurrencyType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/amount-currency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/amount-currency/</guid>
      <description> AmountCurrencyTypeAmount with currency: combination of a NumberType input and a ChoiceType input (for currency selection).&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: AmountCurrencyType Type options Option Type Default value Description label boolean false amount_constraints string [] inherit_data boolean true currencies array [] Code example OrderPaymentType.php $builder -&amp;gt;add(&amp;#39;amount_currency&amp;#39;, AmountCurrencyType::class, [ &amp;#39;amount_constraints&amp;#39; =&amp;gt; [ new NotNull(), new GreaterThan([ &amp;#39;value&amp;#39; =&amp;gt; 0, &amp;#39;message&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans( &amp;#39;Invalid value: the payment must be a positive amount.&amp;#39;, [], &amp;#39;Admin.Notifications.Error&amp;#39; ), ]), ], &amp;#39;currencies&amp;#39; =&amp;gt; $this-&amp;gt;currencySymbolByIdChoiceProvider-&amp;gt;getChoices([ &amp;#39;id_shop&amp;#39; =&amp;gt; $this-&amp;gt;contextShopId, ]), ]) Preview example AmountCurrencyType rendered in form example </description>
    </item>
    <item>
      <title>ButtonCollectionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/button-collection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/button-collection/</guid>
      <description>ButtonCollectionTypeButtonCollectionType is a form type used to group buttons in a common form group, which is useful for forms that have multiple submit buttons.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ButtonCollectionType Type options Option Type Default value Description label boolean false name string `` justify_content string space-between buttons array [] Code example CombinationItemType.php $builder-&amp;gt;add(&amp;#39;actions&amp;#39;, ButtonCollectionType::class, [ &amp;#39;buttons&amp;#39; =&amp;gt; [ &amp;#39;edit&amp;#39; =&amp;gt; [ &amp;#39;type&amp;#39; =&amp;gt; IconButtonType::class, &amp;#39;options&amp;#39; =&amp;gt; [ &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;mode_edit&amp;#39;, &amp;#39;attr&amp;#39; =&amp;gt; [ &amp;#39;class&amp;#39; =&amp;gt; &amp;#39;edit-combination-item tooltip-link&amp;#39;, &amp;#39;data-toggle&amp;#39; =&amp;gt; &amp;#39;pstooltip&amp;#39;, &amp;#39;data-original-title&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Edit&amp;#39;, &amp;#39;Admin.</description>
    </item>
    <item>
      <title>CategoryChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/category-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/category-choice-tree/</guid>
      <description>CategoryChoiceTreeTypeCategoryChoiceTreeType is a child of MaterialChoiceTreeType, it extends parent options with options listed bellow. It is used to display category tree selection box and requires Javascript components.&#xA;Type options Option Type Default value Description choices_tree array Array of all available categories Values to choose from in choices tree choice_label string name An array key which should be targeted in provided choices list to get the label for input choice_value string id_category An array key which should be targeted in provided choices list to get the value for input Required Javascript components Component Description ChoiceTree Responsible for choice tree expanding and collapsing interactivity Learn more about Javascript components and how to use them Code example&amp;lt;?</description>
    </item>
    <item>
      <title>ChangePasswordType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/change-password/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/change-password/</guid>
      <description>ChangePasswordTypeChangePasswordType is used to create form for changing password and has a built-in new password generator which requires Javascript components.&#xA;Required Javascript components Component Description ChangePasswordControl Generates random passwords, validates new password and its confirmation, displays validation messages Learn more about Javascript components and how to use them Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\ChangePasswordType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;change_password&amp;#39;, ChangePasswordType::class) ; } } Then in Javascript you have to enable ChangePasswordControl component.</description>
    </item>
    <item>
      <title>ChoiceCategoriesTreeType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/choice-category-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/choice-category-tree/</guid>
      <description> ChoiceCategoriesTreeTypeThis form class is responsible for creating a category selector using a tree view&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ChoiceCategoriesTreeType Type options Option Type Default value Description label boolean false choices array list array valid_list array multiple boolean true allows multi selection of categories Required Javascript components Component Description ../admin-dev/themes/default/js/bundle/category-tree.js Responsible for category tree expanding and collapsing interactivity Code example ProductInformation.php $builder-&amp;gt;add(&amp;#39;categories&amp;#39;, ChoiceCategoriesTreeType::class, [ &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;Associated categories&amp;#39;, [], &amp;#39;Admin.Catalog.Feature&amp;#39;), &amp;#39;list&amp;#39; =&amp;gt; $this-&amp;gt;nested_categories, &amp;#39;valid_list&amp;#39; =&amp;gt; $this-&amp;gt;categories, &amp;#39;multiple&amp;#39; =&amp;gt; true, ]) Preview example ChoiceCategoriesTreeType rendered in form example </description>
    </item>
    <item>
      <title>ColorPickerType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/color-picker-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/color-picker-type/</guid>
      <description> ColorPickerTypeThis form class is responsible for creating a color picker field&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ColorPickerType Type options Option Type Default value Description Code example OrderStateType.php $builder-&amp;gt;add(&amp;#39;color&amp;#39;, ColorPickerType::class, [ &amp;#39;required&amp;#39; =&amp;gt; true, ]) Preview example ColorPickerType rendered in form example </description>
    </item>
    <item>
      <title>ConfigurableCountryChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/configurable-country-choice-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/configurable-country-choice-type/</guid>
      <description> ConfigurableCountryChoiceTypeClass responsible for providing configurable countries list&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ConfigurableCountryChoiceType Type options Option Type Default value Description Code example StateGridDefinitionFactory.php $builder-&amp;gt;add( (new Filter(&amp;#39;id_country&amp;#39;, ConfigurableCountryChoiceType::class)) -&amp;gt;setTypeOptions([ &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;contains_states&amp;#39; =&amp;gt; true, &amp;#39;choice_translation_domain&amp;#39; =&amp;gt; false, ]) -&amp;gt;setAssociatedColumn(&amp;#39;country_name&amp;#39;) ) Preview example ConfigurableCountryChoiceType rendered in form example </description>
    </item>
    <item>
      <title>CountryChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/country-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/country-choice/</guid>
      <description> CountryChoiceTypeCountryChoiceType is a child of ChoiceType. It is used to display countries selection box and by default comes with a list of countries from PrestaShop database.&#xA;Type options Option Type Default value Description choices array Array of all available countries Choice list that is passed to parent &amp;lsquo;choices&amp;rsquo;. Array should be formatted in name =&amp;gt; value pairs. Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\CountryChoiceType; use Symfony\Component\Form\AbstractType; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;country&amp;#39;, CountryChoiceType::class); } } Preview example CountryChoiceType rendered in form example </description>
    </item>
    <item>
      <title>CustomContentType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/custom-content-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/custom-content-type/</guid>
      <description> CustomContentTypeType is used to add any content at any position of the form, rather than the actual field.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: CustomContentType Type options Option Type Default value Description Code example CmsPageType.php $builder-&amp;gt;add(&amp;#39;seo_preview&amp;#39;, CustomContentType::class, [ &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;SEO preview&amp;#39;, &amp;#39;Admin.Global&amp;#39;), &amp;#39;help&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Here is a preview of how your page will appear in search engine results.&amp;#39;, &amp;#39;Admin.Global&amp;#39;), &amp;#39;template&amp;#39; =&amp;gt; &amp;#39;@PrestaShop/Admin/Improve/Design/Cms/Blocks/seo_preview.html.twig&amp;#39;, &amp;#39;data&amp;#39; =&amp;gt; [ &amp;#39;cms_url&amp;#39; =&amp;gt; $options[&amp;#39;cms_preview_url&amp;#39;], ], ]) Preview example CustomContentType rendered in form example </description>
    </item>
    <item>
      <title>CustomMoneyType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/custom-money-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/custom-money-type/</guid>
      <description> CustomMoneyTypeNative Symfony MoneyType customized for PrestaShop&#xA;This form type is a Form Type Extension, and will not be used directly. Namespace: PrestaShopBundle\Form\Admin\Type Reference: CustomMoneyType </description>
    </item>
    <item>
      <title>DatePickerType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/date-picker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/date-picker/</guid>
      <description> DatePickerTypeDatePickerType creates a field with a date picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.&#xA;Custom optionsNone.&#xA;Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\DatePickerType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;date_from&amp;#39;, DatePickerType::class) -&amp;gt;add(&amp;#39;date_to&amp;#39;, DatePickerType::class); } } Preview example DatePickerType rendered in form example </description>
    </item>
    <item>
      <title>DateRangeType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/date-range/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/date-range/</guid>
      <description> DateRangeTypeDateRangeType combines two DatePickers to create date range picker. It uses Javascript, but doesn&amp;rsquo;t require any specific components, as it&amp;rsquo;s already enabled globally.&#xA;Custom optionsNone.&#xA;Required Javascript componentsNone.&#xA;Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\DateRangeType; use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\FormBuilderInterface; class CustomType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { // this will render a date range picker with 2 DatePickerTypes // named &amp;#39;date_add_from&amp;#39; and &amp;#39;date_add_to&amp;#39; $builder-&amp;gt;add(&amp;#39;date_add&amp;#39;, DateRangeType::class); } } Preview example DateRangeType rendered in form example </description>
    </item>
    <item>
      <title>DeltaQuantityType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/delta-quantity-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/delta-quantity-type/</guid>
      <description>DeltaQuantityTypeQuantity field that displays the initial quantity (not editable) and allows editing with delta quantity instead (ex: +5, -8). The input data of this form type is the initial (as a plain integer) however, its output on submit is the delta quantity.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: DeltaQuantityType Type options Option Type Default value Description Code example BulkCombinationStockType $builder-&amp;gt;add(&amp;#39;delta_quantity&amp;#39;, DeltaQuantityType::class, [ &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Edit quantity&amp;#39;, &amp;#39;Admin.Catalog.Feature&amp;#39;), &amp;#39;disabling_switch&amp;#39; =&amp;gt; true, &amp;#39;disabling_switch_event&amp;#39; =&amp;gt; &amp;#39;combinationSwitchDeltaQuantity&amp;#39;, &amp;#39;disabled_value&amp;#39; =&amp;gt; function (?</description>
    </item>
    <item>
      <title>EmailType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/email-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/email-type/</guid>
      <description> EmailTypeSymfony native EmailType extended with IDNConverter (InternationalizedDomainNameConverter) feature&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: EmailType Type options Option Type Default value Description Code example EmployeeType $builder-&amp;gt;add(&amp;#39;email&amp;#39;, EmailType::class, [ &amp;#39;constraints&amp;#39; =&amp;gt; [ $this-&amp;gt;getNotBlankConstraint(), $this-&amp;gt;getLengthConstraint(EmployeeEmail::MAX_LENGTH), new Email([ &amp;#39;message&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;This field is invalid&amp;#39;, [], &amp;#39;Admin.Notifications.Error&amp;#39;), ]), ], ]) Preview example EmailType rendered in form example </description>
    </item>
    <item>
      <title>EntityItemType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/entity-item-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/entity-item-type/</guid>
      <description> EntityItemTypeDefault entry type used by EntitySearchInputType&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: EntityItemType Type options Option Type Default value Description </description>
    </item>
    <item>
      <title>EntitySearchInputType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/entity-search-input-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/entity-search-input-type/</guid>
      <description>EntitySearchInputTypeThis form type is used for an OneToMany (or ManyToMany) association, it allows to search a list of entities (based on a remote URL) and associate it. It is based on the CollectionType form type which provides prototype features to display a custom template for each associated item.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: EntitySearchInputType Type options Option Type Default value Description Code example DescriptionType $builder-&amp;gt;add(&amp;#39;related_products&amp;#39;, EntitySearchInputType::class, [ &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Related products&amp;#39;, &amp;#39;Admin.</description>
    </item>
    <item>
      <title>FormattedTextareaType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/formatted-textarea/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/formatted-textarea/</guid>
      <description>FormattedTextareaTypeEnables TinyMCE text editor on TextareaType.&#xA;Type options Option Type Default value Description autoload bool true Whether to automatically load TinyMCE editor, or no. limit int 21844 Limit of characters in text field. By default value equals to max size of UTF-8 content available in MySQL text column Required Javascript components Component Description TinyMCEEditor Rich text editor Learn more about Javascript components and how to use them Code example&amp;lt;?php // path/to/your/CustomType.</description>
    </item>
    <item>
      <title>GeneratableTextType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/generatable-text/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/generatable-text/</guid>
      <description>GeneratableTextTypeExtends TextType with additional button which allows to generate random value for input.&#xA;Type options Option Type Default value Description generated_value_length int 32 The length of value to be generated Required Javascript components Component Description GeneratableInput Generates a random value for input. Learn more about Javascript components and how to use them Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\GeneratableTextType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;key&amp;#39;, GeneratableTextType::class, [ &amp;#39;generated_value_length&amp;#39; =&amp;gt; 16, ]) ; } } Then in Javascript you have to enable GeneratableInput component.</description>
    </item>
    <item>
      <title>IconButtonType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/icon-button-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/icon-button-type/</guid>
      <description> IconButtonTypeA form button with material icon.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: IconButtonType Type options Option Type Default value Description icon string The icon to display type string The button type (link, &amp;hellip;) Code example FooterType $builder-&amp;gt;add(&amp;#39;catalog&amp;#39;, IconButtonType::class, [ &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Go to catalog&amp;#39;, &amp;#39;Admin.Catalog.Feature&amp;#39;), &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;link&amp;#39;, &amp;#39;icon&amp;#39; =&amp;gt; &amp;#39;arrow_back_ios&amp;#39;, &amp;#39;attr&amp;#39; =&amp;gt; [ &amp;#39;class&amp;#39; =&amp;gt; &amp;#39;btn-outline-secondary border-white go-to-catalog-button&amp;#39;, &amp;#39;href&amp;#39; =&amp;gt; $this-&amp;gt;router-&amp;gt;generate(&amp;#39;admin_products_v2_index&amp;#39;, [&amp;#39;offset&amp;#39; =&amp;gt; &amp;#39;last&amp;#39;, &amp;#39;limit&amp;#39; =&amp;gt; &amp;#39;last&amp;#39;]), ], ]) Preview example IconButtonType rendered in form example </description>
    </item>
    <item>
      <title>ImagePreviewType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/image-preview-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/image-preview-type/</guid>
      <description> ImagePreviewTypeThis form type is used to display an image value without providing an interactive input to edit it. It is based on a hidden input so it could be changed programmatically, or used just to display an image in a form.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ImagePreviewType Type options Option Type Default value Description type string hidden image_class string img-fluid Code example HeaderType $builder-&amp;gt;add(&amp;#39;cover_thumbnail&amp;#39;, ImagePreviewType::class, [ &amp;#39;label&amp;#39; =&amp;gt; false, ]) Preview example ImagePreviewType rendered in form example </description>
    </item>
    <item>
      <title>IntegerMinMaxFilterType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/integer-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/integer-min-max-filter/</guid>
      <description>IntegerMinMaxFilterTypeThe IntegerMinMaxFilterType represents two IntegerType fields - one holds minimum value of integer type and other holds maximum value. IntegerType is one of the native symfony types.&#xA;Type options Option Type Default Description min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;), &amp;lsquo;min&amp;rsquo; =&amp;gt; 0, &amp;lsquo;step&amp;rsquo; =&amp;gt; 1, ), ) Accepts all possible values that IntegerType has* max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.</description>
    </item>
    <item>
      <title>IpAddressType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/ip-address/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/ip-address/</guid>
      <description>IpAddressTypeExtends TextType with additional button which inserts current device ip address to input.&#xA;Type optionsNone.&#xA;Required Javascript components Component Description ../admin-dev/themes/new-theme/js/maintenance-page/ip-input.js Inserts current device ip address to input. Code example&amp;lt;?php // path/to/your/CustomType.php use PrestaShopBundle\Form\Admin\Type\IpAddressType; class CustomType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add( &amp;#39;my_ip&amp;#39;, IpAddressType::class ) ; } } Then in Javascript you have to enable IpInput component.&#xA;import IpInput from &amp;#39;admin-dev/themes/new-theme/js/maintenance-page/ip-input&amp;#39;; // initialize the component IpInput.</description>
    </item>
    <item>
      <title>LogSeverityChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/log-severity-choice-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/log-severity-choice-type/</guid>
      <description> LogSeverityChoiceTypeChoiceType of PrestaShopLogger Log levels&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: LogSeverityChoiceType Type options Option Type Default value Description Code example LogsByEmailType $builder-&amp;gt;add(&amp;#39;logs_by_email&amp;#39;, LogSeverityChoiceType::class, [ &amp;#39;placeholder&amp;#39; =&amp;gt; $this-&amp;gt;trans( &amp;#39;None&amp;#39;, &amp;#39;Admin.Global&amp;#39; ), &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans( &amp;#39;Minimum severity level&amp;#39;, &amp;#39;Admin.Advparameters.Feature&amp;#39; ), &amp;#39;help&amp;#39; =&amp;gt; $this-&amp;gt;trans( &amp;#39;Click on &amp;#34;None&amp;#34; to disable log alerts by email or enter the recipients of these emails in the following field.&amp;#39;, &amp;#39;Admin.Advparameters.Help&amp;#39; ), ]) Preview example LogSeverityChoiceType rendered in form example </description>
    </item>
    <item>
      <title>MaterialChoiceTableType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-choice-table/</guid>
      <description>MaterialChoiceTableTypeMaterialChoiceTableType renders checkbox choices using table layout. It requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description expanded bool true Whether the table should be expanded by default or not multiple bool true Whether to enable multiple checkboxes selection or no Required Javascript components Component Description ChoiceTable Manages selection of all checkboxes Learn more about Javascript components and how to use them Code example&amp;lt;?php // path/to/your/CustomType.</description>
    </item>
    <item>
      <title>MaterialChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-choice-tree/</guid>
      <description>MaterialChoiceTreeTypeMaterialChoiceTreeType renders checkbox choices using choices tree layout. Requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description choices_tree array [] The choices array to select from choice_label string &amp;rsquo;name&#39; The key in options array to target when getting label for checkbox choice_value string &amp;lsquo;id&amp;rsquo; The key in options array to target when getting value for checkbox choice_children string &amp;lsquo;children&amp;rsquo; The key in options array to target when getting the child for checkbox multiple bool true Whether to enable multiple checkboxes selection or no disabled_values array [] Array of ids to disable in choices tree Required Javascript components Component Description ChoiceTree Manages UI interactions: expanding and collapsing tree, auto-checking child checkbox, enabling and disabling inputs.</description>
    </item>
    <item>
      <title>MaterialMultipleChoiceTableType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-multiple-choice-table/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/material-multiple-choice-table/</guid>
      <description>MaterialMultipleChoiceTableTypeMaterialMultipleChoiceTableType renders checkbox choices using choices table layout. It is similar to MaterialChoiceTableType, but it allows using multiple checkboxes per row. Requires Javascript component to work as expected.&#xA;Type options Option Type Default value Description multiple_choices array none Each item of array should contain a name which represents column header and valid options for ChoiceType including the &amp;lsquo;choices&amp;rsquo; array which values are rendered as column selections choices array none The &amp;lsquo;choices&amp;rsquo; array for ChoiceType.</description>
    </item>
    <item>
      <title>MoneyWithSuffixType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/money-with-suffix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/money-with-suffix/</guid>
      <description> MoneyWithSuffixTypeThe MoneyWithSuffixType represents input with currency suffix.&#xA;Type options Option Type Default Description currency string EUR Currency ISO code suffix string Empty string Suffix text Required Javascript componentsNone.&#xA;Code exampleAdd MoneyWithSuffixType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\MoneyWithSuffixType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder -&amp;gt;add(&amp;#39;price&amp;#39;, MoneyWithSuffixType::class, [ &amp;#39;currency&amp;#39; =&amp;gt; &amp;#39;EUR&amp;#39;, &amp;#39;suffix&amp;#39; =&amp;gt; &amp;#39;(tax excl.)&amp;#39;, ]) ; } } Preview example MoneyWithSuffixType rendered in form </description>
    </item>
    <item>
      <title>NavigationTabType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/navigation-tab-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/navigation-tab-type/</guid>
      <description>NavigationTabTypeThis form type is used as a container of sub forms, each sub form will be rendered as a part of the navigation tab component. Each first level child is used as a different tab, its label is used for the tab name, and its widget as the tab content.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: NavigationTabType Type options Option Type Default value Description Usage and descriptionThis form type was introduced in 8.</description>
    </item>
    <item>
      <title>NumberMinMaxFilterType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/number-min-max-filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/number-min-max-filter/</guid>
      <description>NumberMinMaxFilterType The NumberMinMaxFilterType represents two NumberType fields - one holds minimum value of float number type and other holds maximum value. NumberType is one of the native symfony types.&#xA;Type options Option Type Default Description min_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Min&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;)), ) Accepts all possible values that NumberType has max_field_options array array ( &amp;lsquo;attr&amp;rsquo; =&amp;gt; array ( &amp;lsquo;placeholder&amp;rsquo; =&amp;gt; $this-&amp;gt;trans(&amp;lsquo;Max&amp;rsquo;, [], &amp;lsquo;Admin.Global&amp;rsquo;)), ) Accepts all possible values that NumberType has Required Javascript componentsNone.</description>
    </item>
    <item>
      <title>PriceReductionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/price-reduction-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/price-reduction-type/</guid>
      <description> PriceReductionTypeResponsible for creating form for price reduction&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: PriceReductionType Type options Option Type Default value Description Code example CatalogPriceRuleType $builder-&amp;gt;add(&amp;#39;reduction&amp;#39;, PriceReductionType::class, [ &amp;#39;constraints&amp;#39; =&amp;gt; [ new Reduction([ &amp;#39;invalidPercentageValueMessage&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans( &amp;#39;Reduction value &amp;#34;%value%&amp;#34; is invalid. Allowed values from 0 to %max%&amp;#39;, [&amp;#39;%max%&amp;#39; =&amp;gt; ReductionVO::MAX_ALLOWED_PERCENTAGE . &amp;#39;%&amp;#39;], &amp;#39;Admin.Notifications.Error&amp;#39; ), &amp;#39;invalidAmountValueMessage&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans( &amp;#39;Reduction value &amp;#34;%value%&amp;#34; is invalid. Value cannot be negative&amp;#39;, [], &amp;#39;Admin.Notifications.Error&amp;#39; ), ]), ], ]) </description>
    </item>
    <item>
      <title>ProfileChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/profile-choice-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/profile-choice-type/</guid>
      <description> ProfileChoiceTypeClass ProfileChoiceType is choice type for selecting employee&amp;rsquo;s profile.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type\Common\Team Reference: ProfileChoiceType Type options Option Type Default value Description Code example EmployeeGridDefinitionFactory -&amp;gt;add( (new Filter(&amp;#39;profile&amp;#39;, ProfileChoiceType::class)) -&amp;gt;setTypeOptions([ &amp;#39;required&amp;#39; =&amp;gt; false, ]) -&amp;gt;setAssociatedColumn(&amp;#39;profile&amp;#39;) ) Preview example ProfileChoiceType rendered in form example </description>
    </item>
    <item>
      <title>RadioWithChoiceChildrenType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/radio-with-choice-children-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/radio-with-choice-children-type/</guid>
      <description>RadioWithChoiceChildrenTypeCombination of a RadioType and a ChoiceType fields&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: RadioWithChoiceChildrenType Type options Option Type Default value Description radio_name string Name of the radio input radio_label string Label of the radio input child_choice array Choices available in the ChoiceType Code example ExportCataloguesType $builder-&amp;gt;add(&amp;#39;themes_selectors&amp;#39;, RadioWithChoiceChildrenType::class, [ &amp;#39;radio_name&amp;#39; =&amp;gt; &amp;#39;themes_type&amp;#39;, &amp;#39;radio_label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Theme translations&amp;#39;, &amp;#39;Admin.International.Feature&amp;#39;), &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;label&amp;#39; =&amp;gt; null, &amp;#39;child_choice&amp;#39; =&amp;gt; [ &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;selected_value&amp;#39;, &amp;#39;empty&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Select a theme&amp;#39;, &amp;#39;Admin.</description>
    </item>
    <item>
      <title>ResizableTextType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/resizable-text-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/resizable-text-type/</guid>
      <description> ResizableTextTypeResizableTextType adds new sizing options to TextType.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ResizableTextType Type options Option Type Default value Description </description>
    </item>
    <item>
      <title>SearchAndResetType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/search-and-reset-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/search-and-reset-type/</guid>
      <description> SearchAndResetTypeFormType used in rendering of &amp;ldquo;Search and Reset&amp;rdquo; action in Grids.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: SearchAndResetType Type options Option Type Default value Description Code example AddressGridDefinitionFactory -&amp;gt;add( (new Filter(&amp;#39;actions&amp;#39;, SearchAndResetType::class)) -&amp;gt;setAssociatedColumn(&amp;#39;actions&amp;#39;) -&amp;gt;setTypeOptions([ &amp;#39;reset_route&amp;#39; =&amp;gt; &amp;#39;admin_common_reset_search_by_filter_id&amp;#39;, &amp;#39;reset_route_params&amp;#39; =&amp;gt; [ &amp;#39;filterId&amp;#39; =&amp;gt; self::GRID_ID, ], &amp;#39;redirect_route&amp;#39; =&amp;gt; &amp;#39;admin_addresses_index&amp;#39;, ]) ) </description>
    </item>
    <item>
      <title>ShopChoiceTreeType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/shop-choice-tree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/shop-choice-tree/</guid>
      <description> ShopChoiceTreeTypeThe ShopChoiceTreeType is subtype of MaterialChoiceTreeType which is configured to be used for shop association input.&#xA;Type options Option Type Default Description multiple bool true Whether multiple shops can be selected or not. Required Javascript components Component Description ChoiceTree Manages interaction of choice tree Learn more about Javascript components and how to use them Code exampleAdd ShopChoiceTreeType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\ShopChoiceTreeType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;shop_association&amp;#39;, ShopChoiceTreeType::class); } } Preview example ShopChoiceTreeType rendered in form </description>
    </item>
    <item>
      <title>ShopRestrictionCheckboxType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/shop-restriction-checkbox-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/shop-restriction-checkbox-type/</guid>
      <description> ShopRestrictionCheckboxTypeThis class displays customized checkbox which is used for shop restriction functionality.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ShopRestrictionCheckboxType Type options Option Type Default value Description Code example ShopLogosType $builder-&amp;gt;add($form-&amp;gt;getName() . $suffix, ShopRestrictionCheckboxType::class, [ &amp;#39;attr&amp;#39; =&amp;gt; [ &amp;#39;is_allowed_to_display&amp;#39; =&amp;gt; $isAllowedToDisplay, &amp;#39;data-shop-restriction-target&amp;#39; =&amp;gt; $form-&amp;gt;getName(), ], ]); </description>
    </item>
    <item>
      <title>SubmittableDeltaQuantityType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/submittable-delta-quantity-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/submittable-delta-quantity-type/</guid>
      <description> SubmittableDeltaQuantityTypeWraps SubmittableInput and DeltaQuantity components to work together.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: SubmittableDeltaQuantityType Required Javascript components Component Description SubmitableDeltaQuantityInput Manages delta input and quantity synchronisation Learn more about Javascript components and how to use them Type options Option Type Default value Description Code example$builder-&amp;gt;add(&amp;#39;delta_quantity&amp;#39;, SubmittableDeltaQuantityType::class) </description>
    </item>
    <item>
      <title>SubmittableInputType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/submittable-input-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/submittable-input-type/</guid>
      <description> SubmittableInputTypeAdds a button right into specified input and toggles its availability on change&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: SubmittableInputType Type options Option Type Default value Description Required Javascript components Component Description admin-dev/themes/new-theme/js/components/form/submittable-input.ts </description>
    </item>
    <item>
      <title>SwitchType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/switch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/switch/</guid>
      <description> SwitchTypeThe SwitchType displays a switch with Yes/No values.&#xA;Type options Option Type Default Description choices array Choices with Yes/No values Choices for switch type disabled bool false Whether Switch should be disabled or not Required Javascript componentsNone.&#xA;Code exampleAdd SwitchType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\SwitchType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;switch&amp;#39;, SwitchType::class, [ // Customized choices with ON/OFF instead of Yes/No &amp;#39;choices&amp;#39; =&amp;gt; [ &amp;#39;ON&amp;#39; =&amp;gt; true, &amp;#39;OFF&amp;#39; =&amp;gt; false, ], ]); } } Preview example SwitchType rendered in form </description>
    </item>
    <item>
      <title>TextPreviewType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-preview-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-preview-type/</guid>
      <description> TextPreviewTypeThis form type displays a text value without providing an interactive input to edit it. It is based on a hidden input so it could be changed programmatically, or used just to display data in a form.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TextPreviewType Type options Option Type Default value Description type string hidden Input type preview_class string text-preview Class to apply on the input prefix string null Prefix data to prepend to the value suffix string null Suffix data to append to the value Code example SearchedCustomerType $builder-&amp;gt;add(&amp;#39;fullname_and_email&amp;#39;, TextPreviewType::class, [ &amp;#39;label&amp;#39; =&amp;gt; false, &amp;#39;block_prefix&amp;#39; =&amp;gt; &amp;#39;searched_customer_fullname_and_email&amp;#39;, ]) </description>
    </item>
    <item>
      <title>TextWithLengthCounterType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-with-length-counter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-with-length-counter/</guid>
      <description>TextWithLengthCounterTypeThe TextWithLengthCounterType represents text input with value length counter.&#xA;Type options Option Type Default Description max_length int None, must be configured Max length of input value position string before Configures position for counter. Available options are: before and after input string text Configured input type text or textarea Required Javascript components Component Description TextWithLengthCounter Calculates remaining length for input Learn more about Javascript components and how to use them Code exampleFirst, you have to add TextWithLengthCounterType to your form.</description>
    </item>
    <item>
      <title>TextWithRecommendedLengthType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-with-recommended-length-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/text-with-recommended-length-type/</guid>
      <description>TextWithRecommendedLengthTypeIt is used to add a field with a recommended input length counter to the form.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TextWithRecommendedLengthType Type options Option Type Default value Description recommended_length int Required Javascript components Component Description TextWithRecommendedLengthCounter Adds a recommended length counter to the input Learn more about Javascript components and how to use them Code example CmsPageType $builder-&amp;gt;add(&amp;#39;meta_description&amp;#39;, TranslatableType::class, [ &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;trans(&amp;#39;Meta description&amp;#39;, &amp;#39;Admin.Global&amp;#39;), &amp;#39;type&amp;#39; =&amp;gt; TextWithRecommendedLengthType::class, &amp;#39;help&amp;#39; =&amp;gt; $invalidCharsText, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;options&amp;#39; =&amp;gt; [ &amp;#39;recommended_length&amp;#39; =&amp;gt; self::RECOMMENDED_DESCRIPTION_LENGTH, &amp;#39;attr&amp;#39; =&amp;gt; [ &amp;#39;maxlength&amp;#39; =&amp;gt; self::META_DESCRIPTION_MAX_CHARS, ], &amp;#39;constraints&amp;#39; =&amp;gt; [ new TypedRegex([ &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;generic_name&amp;#39;, ]), new Length([ &amp;#39;max&amp;#39; =&amp;gt; self::META_DESCRIPTION_MAX_CHARS, &amp;#39;maxMessage&amp;#39; =&amp;gt; $this-&amp;gt;trans( &amp;#39;This field cannot be longer than %limit% characters&amp;#39;, &amp;#39;Admin.</description>
    </item>
    <item>
      <title>TranslatableChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translatable-choice-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translatable-choice-type/</guid>
      <description> TranslatableChoiceTypeClass TranslatableChoiceType adds translatable choice types with custom inner type to forms. Language selection uses a dropdown.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TranslatableChoiceType Type options Option Type Default value Description Code example OrderStateType $builder-&amp;gt;add(&amp;#39;template&amp;#39;, TranslatableChoiceType::class, [ &amp;#39;hint&amp;#39; =&amp;gt; sprintf( &amp;#39;%s&amp;lt;br&amp;gt;%s&amp;#39;, $this-&amp;gt;trans(&amp;#39;Only letters, numbers and underscores (&amp;#34;_&amp;#34;) are allowed.&amp;#39;, &amp;#39;Admin.Shopparameters.Help&amp;#39;), $this-&amp;gt;trans(&amp;#39;Email template for both .html and .txt.&amp;#39;, &amp;#39;Admin.Shopparameters.Help&amp;#39;) ), &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;choices&amp;#39; =&amp;gt; $this-&amp;gt;templates, &amp;#39;row_attr&amp;#39; =&amp;gt; $this-&amp;gt;templateAttributes, ]) </description>
    </item>
    <item>
      <title>TranslatableType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translatable/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translatable/</guid>
      <description>TranslatableTypeThe TranslatableType allows you to configure multilanguage input. This multilanguage behavior is provided on top of an existing input Type.&#xA;Type options Option Type Default Description type string Symfony\Component\Form\Extension\Core\Type\TextType Type that you want to be translatable options array Empty array Options for configured type locales array Enabled shop locales (languages) Locales in which field can be translated If you wish to use FormattedTextareaType as type, your base type must be TranslateType instead of TranslatableType.</description>
    </item>
    <item>
      <title>TranslateType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translate-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/translate-type/</guid>
      <description> TranslateTypeThis form class is responsible for creating a translatable form. Language selection uses tabs.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TranslateType Type options Option Type Default value Description Code example ProductFeature $builder-&amp;gt;add(&amp;#39;custom_value&amp;#39;, TranslateType::class, [ &amp;#39;type&amp;#39; =&amp;gt; FormType\TextType::class, &amp;#39;options&amp;#39; =&amp;gt; [], &amp;#39;locales&amp;#39; =&amp;gt; $this-&amp;gt;locales, &amp;#39;hideTabs&amp;#39; =&amp;gt; true, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;OR Customized value&amp;#39;, [], &amp;#39;Admin.Catalog.Feature&amp;#39;), ]); </description>
    </item>
    <item>
      <title>TypeaheadCustomerCollectionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-customer-collection-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-customer-collection-type/</guid>
      <description>TypeaheadCustomerCollectionTypeThis form class is responsible for selecting a customer.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TypeaheadCustomerCollectionType Type options Option Type Default value Description Code example ProductSpecificPrice $builder-&amp;gt;add( &amp;#39;sp_id_customer&amp;#39;, TypeaheadCustomerCollectionType::class, [ // &amp;#34;%QUERY&amp;#34; is appended to url in order to avoid &amp;#34;%&amp;#34; sign being encoded into &amp;#34;%25&amp;#34;, // it used as a placeholder to replace with actual query in JS &amp;#39;remote_url&amp;#39; =&amp;gt; $this-&amp;gt;router-&amp;gt;generate(&amp;#39;admin_customers_search&amp;#39;, [&amp;#39;sf2&amp;#39; =&amp;gt; 1]) . &amp;#39;&amp;amp;customer_search=%QUERY&amp;#39;, &amp;#39;mapping_value&amp;#39; =&amp;gt; &amp;#39;id_customer&amp;#39;, &amp;#39;mapping_name&amp;#39; =&amp;gt; &amp;#39;fullname_and_email&amp;#39;, &amp;#39;placeholder&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;All customers&amp;#39;, [], &amp;#39;Admin.</description>
    </item>
    <item>
      <title>TypeaheadProductCollectionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-product-collection-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-product-collection-type/</guid>
      <description>TypeaheadProductCollectionTypeThis form class allows you to select a product, with or without an attribute field.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TypeaheadProductCollectionType Type options Option Type Default value Description Code example ProductInformation $builder-&amp;gt;add(&amp;#39;related_products&amp;#39;, TypeaheadProductCollectionType::class, [ &amp;#39;remote_url&amp;#39; =&amp;gt; $this-&amp;gt;context-&amp;gt;getLegacyAdminLink(&amp;#39;AdminProducts&amp;#39;, true, [&amp;#39;ajax&amp;#39; =&amp;gt; 1, &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;productsList&amp;#39;, &amp;#39;forceJson&amp;#39; =&amp;gt; 1, &amp;#39;disableCombination&amp;#39; =&amp;gt; 1, &amp;#39;exclude_packs&amp;#39; =&amp;gt; 0, &amp;#39;excludeVirtuals&amp;#39; =&amp;gt; 0, &amp;#39;limit&amp;#39; =&amp;gt; 20]) . &amp;#39;&amp;amp;q=%QUERY&amp;#39;, &amp;#39;mapping_value&amp;#39; =&amp;gt; &amp;#39;id&amp;#39;, &amp;#39;mapping_name&amp;#39; =&amp;gt; &amp;#39;name&amp;#39;, &amp;#39;placeholder&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;Search and add a related product&amp;#39;, [], &amp;#39;Admin.</description>
    </item>
    <item>
      <title>TypeaheadProductPackCollectionType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-product-pack-collection-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/typeahead-product-pack-collection-type/</guid>
      <description>TypeaheadProductPackCollectionTypeThis form class allows you to select a product to be included in a pack of products.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: TypeaheadProductPackCollectionType Type options Option Type Default value Description Code example ProductInformation $builder-&amp;gt;add(&amp;#39;inputPackItems&amp;#39;, TypeaheadProductPackCollectionType::class, [ &amp;#39;remote_url&amp;#39; =&amp;gt; $this-&amp;gt;context-&amp;gt;getLegacyAdminLink(&amp;#39;AdminProducts&amp;#39;, true, [&amp;#39;ajax&amp;#39; =&amp;gt; 1, &amp;#39;action&amp;#39; =&amp;gt; &amp;#39;productsList&amp;#39;, &amp;#39;forceJson&amp;#39; =&amp;gt; 1, &amp;#39;excludeVirtuals&amp;#39; =&amp;gt; 1, &amp;#39;limit&amp;#39; =&amp;gt; 20]) . &amp;#39;&amp;amp;q=%QUERY&amp;#39;, &amp;#39;mapping_value&amp;#39; =&amp;gt; &amp;#39;id&amp;#39;, &amp;#39;mapping_name&amp;#39; =&amp;gt; &amp;#39;name&amp;#39;, &amp;#39;placeholder&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;Search for a product&amp;#39;, [], &amp;#39;Admin.Catalog.Help&amp;#39;), &amp;#39;template_collection&amp;#39; =&amp;gt; &amp;#39; &amp;lt;h4&amp;gt;%s&amp;lt;/h4&amp;gt; &amp;lt;div class=&amp;#34;ref&amp;#34;&amp;gt;REF: %s&amp;lt;/div&amp;gt; &amp;lt;div class=&amp;#34;quantity text-md-right&amp;#34;&amp;gt;x%s&amp;lt;/div&amp;gt; &amp;lt;button type=&amp;#34;button&amp;#34; class=&amp;#34;btn btn-danger btn-sm delete&amp;#34;&amp;gt;&amp;lt;i class=&amp;#34;material-icons&amp;#34;&amp;gt;delete&amp;lt;/i&amp;gt;&amp;lt;/button&amp;gt; &amp;#39;, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;label&amp;#39; =&amp;gt; $this-&amp;gt;translator-&amp;gt;trans(&amp;#39;Add products to your pack&amp;#39;, [], &amp;#39;Admin.</description>
    </item>
    <item>
      <title>UnavailableType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/unavailable-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/unavailable-type/</guid>
      <description> UnavailableTypeThis form type is useful during development phase to show part of a form that are not available yet.&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: UnavailableType Type options Option Type Default value Description </description>
    </item>
    <item>
      <title>UnitTypeExtension</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/unit-type-extension/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/unit-type-extension/</guid>
      <description> UnitTypeExtensionThe UnitTypeExtension used with NumberType or IntegerType represents a number input with unit value (e.g. Kg, Cm &amp;amp; etc.).&#xA;Type options Option Type Default Description unit string unit Type of unit (e.g. Kg, Cm &amp;amp; etc) Required Javascript componentsNone.&#xA;Code exampleAdd NumberType or IntegerType to your form and optionally you can configure unit for it.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use Symfony\Component\Form\Extension\Core\Type\NumberType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;weight&amp;#39;, NumberType::class, [ &amp;#39;unit&amp;#39; =&amp;gt; &amp;#39;kg&amp;#39;, &amp;#39;required&amp;#39; =&amp;gt; false, &amp;#39;empty_data&amp;#39; =&amp;gt; &amp;#39;0&amp;#39;, ]) ; } } Preview example UnitTypeExtension rendered in form </description>
    </item>
    <item>
      <title>YesAndNoChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/yes-and-no-choice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/yes-and-no-choice/</guid>
      <description> YesAndNoChoiceTypeThe YesAndNoChoiceType represents select input with options Yes and No.&#xA;Type options Option Type Default Description choices array array By default Yes/No choices are defined required boolean false Whether field is required or not Required Javascript componentsNone.&#xA;Code exampleAdd YesAndNoChoiceType to your form.&#xA;&amp;lt;?php use Symfony\Component\Form\AbstractType; use PrestaShopBundle\Form\Admin\Type\YesAndNoChoiceType; class SomeType extends AbstractType { public function buildForm(FormBuilderInterface $builder, array $options) { $builder-&amp;gt;add(&amp;#39;yesandnochoicetype&amp;#39;, YesAndNoChoiceType::class, [ &amp;#39;choices&amp;#39; =&amp;gt; [ &amp;#39;Yes&amp;#39; =&amp;gt; true, &amp;#39;No&amp;#39; =&amp;gt; false, ], ]); } } Preview example YesAndNoChoiceType rendered in form </description>
    </item>
    <item>
      <title>ZoneChoiceType</title>
      <link>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/zone-choice-type/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/development/components/form/types-reference/zone-choice-type/</guid>
      <description> ZoneChoiceTypeClass is responsible for providing configurable zone choices with &amp;ndash; symbol in front of array&#xA;Namespace: PrestaShopBundle\Form\Admin\Type Reference: ZoneChoiceType Type options Option Type Default value Description Code example StateGridDefinitionFactory return (new FilterCollection()) -&amp;gt;add( (new Filter(&amp;#39;id_zone&amp;#39;, ZoneChoiceType::class)) -&amp;gt;setTypeOptions([ &amp;#39;required&amp;#39; =&amp;gt; false, ]) -&amp;gt;setAssociatedColumn(&amp;#39;zone_name&amp;#39;) ) Preview example ZoneChoiceType rendered in form using textarea </description>
    </item>
  </channel>
</rss>
