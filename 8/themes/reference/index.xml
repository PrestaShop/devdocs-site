<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Theme development reference on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/8/themes/reference/</link>
    <description>Recent content in Theme development reference on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/8/themes/reference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Migrating from PrestaShop 1.6</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/migration-from-16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/migration-from-16/</guid>
      <description>Migrating from PrestaShop 1.6PrestaShop 1.7 introduces a totally reworked theme system from version 1.6, with the goal of making PrestaShop upgrades easier, and making it easier and faster to create a brand new theme.&#xA;The huge change to the theme system means that there is no easy way to migrate your PrestaShop 1.6 theme to PrestaShop 1.7.&#xA;When using the automatic upgrade from PrestaShop 1.6 to 1.7, your theme will be switched to the new default theme, called &amp;ldquo;Classic&amp;rdquo;.</description>
    </item>
    <item>
      <title>Overriding modules</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/overriding-modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/overriding-modules/</guid>
      <description>Overriding modulesWhen you write a theme, you often need to override the templates and assets coming from a module so that they match your theme&amp;rsquo;s specific markup needs. Themes can override modules&amp;rsquo; assets (CSS and JavaScript only) by placing the corresponding file at a specific location.&#xA;All module overriding code goes to the modules directory (in your module&amp;rsquo;s own directory).&#xA;If your asset override is empty, PrestaShop will load nothing (neither the module one nor your override).</description>
    </item>
    <item>
      <title>Overriding selectors</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/overriding-selectors/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/overriding-selectors/</guid>
      <description>Overriding selectorsWhen you write a theme, you often need to change the markup, but if you do this, you&amp;rsquo;ll encounter some problems because core&amp;rsquo;s and classic&amp;rsquo;s javascript use some class in order to work.&#xA;Two selectors maps are available, one on the core side (/themes/_core/js/selectors.js) and another one inside the classic theme (/themes/classic/_dev/js/selectors.js).&#xA;That means that almost every selectors we use inside every JS files are inside these two files.</description>
    </item>
    <item>
      <title>RTL support</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/rtl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/rtl/</guid>
      <description>RTL supportPrestaShop supports RTL (Right-to-left) themes natively.&#xA;RTL stylesheetsThere are two ways of customizing your theme for RTL: either by adding an override file that is only loaded for RTL languages, or by using completely different version of the theme&amp;rsquo;s stylesheets.&#xA;CSS override filePrestaShop will try to load a css file named rtl.css after your theme&amp;rsquo;s ones when displayed in an RTL language. You can use this file to place any style override you need for RTL.</description>
    </item>
    <item>
      <title>Smarty helper functions</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/smarty-helpers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/smarty-helpers/</guid>
      <description>Helpers: functions and modifiersPrestaShop provides several smarty helper functions and modifiers. See Smarty extensions for a full reference.</description>
    </item>
    <item>
      <title>Theme translation</title>
      <link>https://devdocs.prestashop-project.org/8/themes/reference/theme-translation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/8/themes/reference/theme-translation/</guid>
      <description>How to translate your themePrestaShop provides a way to translate your theme to any language.&#xA;1. Add new or customize existing wordings in a themeAdding new wordings is easy when building your theme. You simply need to edit the .tpl file of your choice and add (or customize) a wording. All wordings must always be written in english.&#xA;For example:&#xA;{l s=&amp;#39;Read more&amp;#39; d=&amp;#39;Shop.Yourthemename&amp;#39;} Change &amp;ldquo;Yourthemename&amp;rdquo; to your own theme&amp;rsquo;s name.</description>
    </item>
  </channel>
</rss>
