<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Admin API on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/9/admin-api/</link>
    <description>Recent content in Admin API on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/9/admin-api/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Context of the Admin API</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/context/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/context/</guid>
      <description>Context of the Admin API Why a new Admin API?The new admin API is here to replace and improve the existing Webservice API that has a few drawbacks:&#xA;Limited permission and security management Performs CRUD operations without much intelligence A bit old compared to the new web standards Legacy code, not tested, hard to maintain, scary to modify Based on ObjectModel which is supposed to disappear one day The goals of the new Admin APIThe modern API is meant to answer these new needs:</description>
    </item>
    <item>
      <title>OAuth2 authentication / authorization</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/oauth/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/oauth/</guid>
      <description>Oauth2The Admin API is based on OAuth2 protocol which is widely used by many web actors.&#xA;TerminologyHere&amp;rsquo;s a bit of generic terminology to help you understand the different components/actors in the OAUth2 protocol and their responsibilities:&#xA;Element Description Resource Owner Entity that can grant access to a protected resource (usually the end user). Client Application requesting access to a protected resource on behalf of the Resource Owner. Access Token A token used to access protected resources Resource Server Server hosting the protected resources capable of accepting and responding to requests using access tokens.</description>
    </item>
    <item>
      <title>How to use the Admin API</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/how-to-use/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/how-to-use/</guid>
      <description>How to use the Admin API Setting up the Admin APIThe Admin API is enabled by default is PrestaShop 9, so it&amp;rsquo;s available out of the box when you install PrestaShop 9.&#xA;You may want to disable checking for HTTPS with TLSv1.2. To do that, go to Advanced Parameters -&amp;gt; Admin Api -&amp;gt; Configuration and disable the &amp;ldquo;Force security in debug mode&amp;rdquo; option. If you don&amp;rsquo;t see this option, make sure to enable Debug mode first in Advanced Parameters -&amp;gt; Performance.</description>
    </item>
    <item>
      <title>Create new API endpoints using CQRS</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/contribute-to-core-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/contribute-to-core-api/</guid>
      <description>Create new API endpoints using CQRSThis guide explains how to create new endpoints for an entity. In this case we chose AttributeGroup as an example, and you can check this pull request as an example in PrestaShop&amp;rsquo;s ps_apiresources module.&#xA;For the new Admin API, although the whole architecture is inside the core of PrestaShop the definition of all the endpoints are in the ps_apiresources module, externalizing the endpoints in a module allows us to make them evolve outside the core release cycle, so it can be updated and improved more frequently.</description>
    </item>
  </channel>
</rss>
