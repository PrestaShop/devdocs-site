<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Authorization Server on PrestaShop Developer Documentation</title>
    <link>https://devdocs.prestashop-project.org/9/admin-api/authorization_server/</link>
    <description>Recent content in Authorization Server on PrestaShop Developer Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://devdocs.prestashop-project.org/9/admin-api/authorization_server/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Internal authorization server</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/authorization_server/internal_authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/authorization_server/internal_authorization/</guid>
      <description>Internal authorization serverPrestaShop can be used as an authorization server, as such it can handle the permissions and authentication to access the resource server.&#xA;When PrestaShop is used as the authorization server, it doesn&amp;rsquo;t need to perform an external call to validate the access token since it already has all the required data to do so in its database, but it still performs the same role.&#xA;Create API clientLet&amp;rsquo;s create our first client.</description>
    </item>
    <item>
      <title>External authorization server</title>
      <link>https://devdocs.prestashop-project.org/9/admin-api/authorization_server/external_authorization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://devdocs.prestashop-project.org/9/admin-api/authorization_server/external_authorization/</guid>
      <description>External authorization serverYou can use an external authorization server to access your resources, to do that you need to install a module that implements our PrestaShop\PrestaShop\Core\Security\OAuth2\AuthorisationServerInterface interface.&#xA;As an example, we developed a keycloak_connector_demo module based on the Keycloak authorization server.&#xA;This module includes a Docker configuration that allows you to launch a Keycloak server locally for development purposes. It includes:&#xA;Keycloak authorization server and its admin interface One default client Some default scopes matching the ones from the core Thanks to this implementation, any authorization server can interact with and authorize the Admin API.</description>
    </item>
  </channel>
</rss>
